import React from "react";
import { Play, Pause, MoreHorizontal } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Skeleton } from "@/components/ui/skeleton";

export default function RecentlyPlayed({ songs, onPlaySong, currentSong, isPlaying, isLoading }) {
  if (isLoading) {
    return (
      <div className="glass-effect rounded-2xl p-6">
        <h3 className="text-xl font-bold mb-6">Recently Played</h3>
        <div className="space-y-4">
          {Array(4).fill(0).map((_, i) => (
            <div key={i} className="flex items-center gap-4">
              <Skeleton className="w-12 h-12 rounded-lg" />
              <div className="flex-1">
                <Skeleton className="h-4 w-32 mb-2" />
                <Skeleton className="h-3 w-24" />
              </div>
            </div>
          ))}
        </div>
      </div>
    );
  }

  return (
    <div className="glass-effect rounded-2xl p-6">
      <h3 className="text-xl font-bold mb-6">Recently Played</h3>
      <div className="space-y-3">
        {songs.map((song, index) => (
          <div
            key={song.id}
            className="group flex items-center gap-4 p-3 rounded-xl hover:bg-white/5 transition-all duration-300 cursor-pointer"
            onClick={() => onPlaySong(song)}
          >
            <div className="w-12 h-12 rounded-lg bg-gradient-to-br from-purple-600 to-pink-600 flex items-center justify-center relative">
              <span className="text-lg">ðŸŽµ</span>
              <div className="absolute inset-0 bg-black/50 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center">
                {currentSong?.id === song.id && isPlaying ? (
                  <Pause className="w-5 h-5" />
                ) : (
                  <Play className="w-5 h-5 ml-0.5" />
                )}
              </div>
            </div>
            <div className="flex-1 min-w-0">
              <h4 className="font-semibold truncate">{song.title}</h4>
              <p className="text-gray-400 text-sm truncate">{song.artist}</p>
            </div>
            <span className="text-gray-400 text-sm">{Math.floor((song.duration || 180) / 60)}:{String((song.duration || 180) % 60).padStart(2, '0')}</span>
            <Button size="icon" variant="ghost" className="opacity-0 group-hover:opacity-100">
              <MoreHorizontal className="w-4 h-4" />
            </Button>
          </div>
        ))}
      </div>
    </div>
  );
}